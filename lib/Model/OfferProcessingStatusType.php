<?php
/**
 * OfferProcessingStatusType
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  YandexMarketApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace YandexMarketApi\Model;
use \YandexMarketApi\ObjectSerializer;

/**
 * OfferProcessingStatusType Class Doc Comment
 *
 * @category Class
 * @description Статус публикации товара:  * &#x60;READY&#x60; — товар прошел модерацию. Чтобы разместить его на Маркете, установите для него цену. * &#x60;IN_WORK&#x60; — товар проходит модерацию. Это занимает несколько дней. * &#x60;NEED_CONTENT&#x60; — для товара без SKU на Маркете &#x60;marketSku&#x60; нужно найти карточку самостоятельно (через API или личный кабинет магазина) или создать ее, если товар еще не продается на Маркете. * &#x60;NEED_INFO&#x60; — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. Информация о причинах отклонения возвращается в параметре &#x60;notes&#x60;. * &#x60;REJECTED&#x60; — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары. * &#x60;SUSPENDED&#x60; — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.
 * @package  YandexMarketApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OfferProcessingStatusType
{
    /**
     * Possible values of this enum
     */
    public const UNKNOWN = 'UNKNOWN';

    public const READY = 'READY';

    public const IN_WORK = 'IN_WORK';

    public const NEED_INFO = 'NEED_INFO';

    public const NEED_MAPPING = 'NEED_MAPPING';

    public const NEED_CONTENT = 'NEED_CONTENT';

    public const CONTENT_PROCESSING = 'CONTENT_PROCESSING';

    public const SUSPENDED = 'SUSPENDED';

    public const REJECTED = 'REJECTED';

    public const REVIEW = 'REVIEW';

    public const CREATE_ERROR = 'CREATE_ERROR';

    public const UPDATE_ERROR = 'UPDATE_ERROR';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::UNKNOWN,
            self::READY,
            self::IN_WORK,
            self::NEED_INFO,
            self::NEED_MAPPING,
            self::NEED_CONTENT,
            self::CONTENT_PROCESSING,
            self::SUSPENDED,
            self::REJECTED,
            self::REVIEW,
            self::CREATE_ERROR,
            self::UPDATE_ERROR
        ];
    }
}


