<?php
/**
 * FbsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  YandexMarketApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace YandexMarketApi\Test\Api;

use \YandexMarketApi\Configuration;
use \YandexMarketApi\ApiException;
use \YandexMarketApi\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * FbsApiTest Class Doc Comment
 *
 * @category Class
 * @package  YandexMarketApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class FbsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addHiddenOffers
     *
     * Скрытие товаров и настройки скрытия.
     *
     */
    public function testAddHiddenOffers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for confirmBusinessPrices
     *
     * Подтверждение цены товара, попавшего в карантин (основная цена).
     *
     */
    public function testConfirmBusinessPrices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for confirmCampaignPrices
     *
     * Подтверждение цены товара, попавшего в карантин (цена в магазине).
     *
     */
    public function testConfirmCampaignPrices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for confirmShipment
     *
     * Подтверждение отгрузки.
     *
     */
    public function testConfirmShipment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCampaignOffers
     *
     * Удаление товаров из ассортимента магазина.
     *
     */
    public function testDeleteCampaignOffers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteHiddenOffers
     *
     * Возобновление показа товаров.
     *
     */
    public function testDeleteHiddenOffers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOffers
     *
     * Удаление товаров из каталога.
     *
     */
    public function testDeleteOffers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for downloadShipmentAct
     *
     * Получение акта приема-передачи.
     *
     */
    public function testDownloadShipmentAct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for downloadShipmentDiscrepancyAct
     *
     * Скачать акт расхождений.
     *
     */
    public function testDownloadShipmentDiscrepancyAct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for downloadShipmentInboundAct
     *
     * Скачать фактический акт приема-передачи для отгрузки.
     *
     */
    public function testDownloadShipmentInboundAct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for downloadShipmentReceptionTransferAct
     *
     * Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее.
     *
     */
    public function testDownloadShipmentReceptionTransferAct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for downloadShipmentTransportationWaybill
     *
     * Скачать транспортную накладную.
     *
     */
    public function testDownloadShipmentTransportationWaybill()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateOrderLabel
     *
     * Ярлык‑наклейка на отдельное грузовое место в заказе.
     *
     */
    public function testGenerateOrderLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateOrderLabels
     *
     * Ярлыки‑наклейки на все грузовые места в заказе.
     *
     */
    public function testGenerateOrderLabels()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBidsInfoForBusiness
     *
     * Информация об установленных ставках.
     *
     */
    public function testGetBidsInfoForBusiness()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBidsRecommendations
     *
     * Рекомендованные ставки для заданных товаров.
     *
     */
    public function testGetBidsRecommendations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBusinessQuarantineOffers
     *
     * Список товаров, находящихся в карантине (основная цена).
     *
     */
    public function testGetBusinessQuarantineOffers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCampaign
     *
     * Информация о магазине.
     *
     */
    public function testGetCampaign()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCampaignLogins
     *
     * Логины, связанные с магазином.
     *
     */
    public function testGetCampaignLogins()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCampaignOffers
     *
     * Список товаров, размещенных в заданном магазине, с параметрами размещения.
     *
     */
    public function testGetCampaignOffers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCampaignQuarantineOffers
     *
     * Список товаров, находящихся в карантине (цена в магазине).
     *
     */
    public function testGetCampaignQuarantineOffers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCampaigns
     *
     * Магазины пользователя.
     *
     */
    public function testGetCampaigns()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCampaignsByLogin
     *
     * Магазины, доступные логину.
     *
     */
    public function testGetCampaignsByLogin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeliveryServices
     *
     * Справочник служб доставки.
     *
     */
    public function testGetDeliveryServices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoodsStats
     *
     * Отчет по товарам.
     *
     */
    public function testGetGoodsStats()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getHiddenOffers
     *
     * Информация о скрытых вами товарах.
     *
     */
    public function testGetHiddenOffers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOfferMappingEntries
     *
     * Список товаров в каталоге.
     *
     */
    public function testGetOfferMappingEntries()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOfferMappings
     *
     * Информация о товарах в каталоге.
     *
     */
    public function testGetOfferMappings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrder
     *
     * Информация о заказе.
     *
     */
    public function testGetOrder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrderLabelsData
     *
     * Информация на ярлыках‑наклейках.
     *
     */
    public function testGetOrderLabelsData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrders
     *
     * Информация о заказах.
     *
     */
    public function testGetOrders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrdersStats
     *
     * Отчет по заказам.
     *
     */
    public function testGetOrdersStats()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPrices
     *
     * Список цен.
     *
     */
    public function testGetPrices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPricesByOfferIds
     *
     * Просмотр установленных в магазине цен.
     *
     */
    public function testGetPricesByOfferIds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getReturn
     *
     * Информация о возврате или невыкупе.
     *
     */
    public function testGetReturn()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getReturnApplication
     *
     * Получение заявления на возврат.
     *
     */
    public function testGetReturnApplication()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getReturnPhoto
     *
     * Получение фотографии возврата.
     *
     */
    public function testGetReturnPhoto()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getReturns
     *
     * Список возвратов и невыкупов.
     *
     */
    public function testGetReturns()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getShipment
     *
     * Получение информации об отгрузке.
     *
     */
    public function testGetShipment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getShipmentOrdersInfo
     *
     * Получение информации о ярлыках.
     *
     */
    public function testGetShipmentOrdersInfo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSuggestedOfferMappingEntries
     *
     * Рекомендованные карточки для ваших товаров.
     *
     */
    public function testGetSuggestedOfferMappingEntries()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSuggestedOfferMappings
     *
     * Предварительный просмотр карточек на Маркете, соответствующих вашим товарам.
     *
     */
    public function testGetSuggestedOfferMappings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSuggestedPrices
     *
     * Цены для продвижения товаров.
     *
     */
    public function testGetSuggestedPrices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWarehouses
     *
     * Список складов и групп складов.
     *
     */
    public function testGetWarehouses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for provideOrderItemIdentifiers
     *
     * Передача уникальных кодов маркировки единиц товара.
     *
     */
    public function testProvideOrderItemIdentifiers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putBidsForBusiness
     *
     * Включение буста продаж и установка ставок.
     *
     */
    public function testPutBidsForBusiness()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchRegionChildren
     *
     * Информация о дочерних регионах.
     *
     */
    public function testSearchRegionChildren()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchRegionsById
     *
     * Информация о регионе.
     *
     */
    public function testSearchRegionsById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchRegionsByName
     *
     * Метод для поиска регионов по их имени.
     *
     */
    public function testSearchRegionsByName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchShipments
     *
     * Получение информации об отгрузках.
     *
     */
    public function testSearchShipments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOrderShipmentBoxes
     *
     * Передача количества грузовых мест в заказе.
     *
     */
    public function testSetOrderShipmentBoxes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateBusinessPrices
     *
     * Установка цен.
     *
     */
    public function testUpdateBusinessPrices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCampaignOffers
     *
     * Настройка размещения товаров в магазине.
     *
     */
    public function testUpdateCampaignOffers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOfferMappingEntries
     *
     * Добавление и редактирование товаров в каталоге.
     *
     */
    public function testUpdateOfferMappingEntries()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOfferMappings
     *
     * Добавление товаров в каталог и редактирование информации о них.
     *
     */
    public function testUpdateOfferMappings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOrderItems
     *
     * Удаление товара из заказа или уменьшение числа единиц.
     *
     */
    public function testUpdateOrderItems()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOrderStatus
     *
     * Изменение статуса заказа.
     *
     */
    public function testUpdateOrderStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOrderStatuses
     *
     * Изменение статусов заказа.
     *
     */
    public function testUpdateOrderStatuses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePrices
     *
     * Установка цен на товары в конкретном магазине..
     *
     */
    public function testUpdatePrices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateStocks
     *
     * Передача информации об остатках.
     *
     */
    public function testUpdateStocks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
